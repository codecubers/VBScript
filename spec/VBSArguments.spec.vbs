'Test VBSArguments.vbs

Option Explicit
Dim incl 'VBScripting.Includer object
Dim ts 'TextStreamer object
Dim sh 'WScript.Shell object
Dim script 'filespec of a .vbs script to be created
Dim stream 'text stream for creating a new script
Dim arg 'string: a command-line argument
Dim args 'string: multiple command-line arguments
Dim pipe 'object: Exec method return value: a process with StdOut and StdErr streams

Set incl = CreateObject( "VBScripting.Includer" )
Execute incl.Read( "TextStreamer" )
Set ts = New TextStreamer
Set sh = CreateObject( "WScript.Shell" )

Execute incl.Read( "TestingFramework" )
With New TestingFramework

    .describe "VBSArguments class"

        'generate a script that will call the class
        'under test and send the results to StdOut

        script = ts.GetFile & ".vbs"
        ts.SetFile script
        Set stream = ts.Open
        stream.WriteLine "'Autogenerated script: writes command-line arguments to StdOut"
        stream.WriteLine "With CreateObject(""VBScripting.Includer"")"
        stream.WriteLine "    Execute .Read(""VBSArguments"")"
        stream.WriteLine "End With"
        stream.WriteLine "With New VBSArguments"
        stream.WriteLine "    WScript.StdOut.WriteLine .GetArgumentsString"
        stream.WriteLine "End With"
        stream.Close

    .it "should get a string of command-line arguments with spaces"
        args = """Some File.txt"" ""Some File2.txt"""
        Set pipe = sh.Exec("%ComSpec% /c cscript //nologo """ & script & """ " & args)
        .AssertEqual pipe.StdOut.ReadLine, " " & args

    .it "should get a single command-line argument with spaces"
        arg = """Some File.txt"""
        Set pipe = sh.Exec("%ComSpec% /c cscript //nologo """ & script & """ " & arg)
        .AssertEqual pipe.StdOut.ReadLine, " " & arg

    .it "should get a single command-line argument without spaces"
        arg = """SomeFile.txt"""
        Set pipe = sh.Exec("%ComSpec% /c cscript //nologo """ & script & """ " & arg)
        .AssertEqual pipe.StdOut.ReadLine, " " & arg

    .it "should get a single command-line argument without spaces #2"

        'Note: VBSArguments.GetArgumentsString wraps each argument
        'in double quotes, regardless of whether it contains spaces
        arg = "SomeFile.txt"
        Set pipe = sh.Exec("%ComSpec% /c cscript //nologo """ & script & """ " & arg)
        .AssertEqual pipe.StdOut.ReadLine, " """ & arg & """"

    'cleanup
    Set pipe = Nothing 'release object memory
    Set sh = Nothing
    ts.Delete 'delete the test script

End With
